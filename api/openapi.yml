openapi: 3.0.0

info:
  title: Note versionner API
  description: API for the Notes versionner application
  version: 0.0.0

basePath: /api

components:
  schemas:
    UserRegistrationData:
      description: Data required to create a user account
      type: object
      properties:
        username:
          description: Unique identifier of the user, will serve as a login credential
          type: string
          required: true
          example: 'H4ckerman'
        password:
          description: Password for the user, will serve as the second half of the login credentials
          type: string
          required: true
          example: 'Sup3rStrongP4SsW0rd'
        email:
          description: Email adress of the user
          type: string
          required: true
          example: 'john.doe@mail.com'

    LoginSuccessData:
      description: Login success data with an authentication token
      type: object
      properties:
        username:
          description: Username of the logged-in user
          type: string
          example: 'H4ckerman'
        token:
          description: JWT Token to be used in the Authorization header with Bearer authentication type
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'

    LoginFormData:
      description: Login information
      type: object
      properties:
        username:
          description: Username of the user to log in
          type: string
          example: 'H4ckerman'
          required: true
        password:
          description: Password of the user to log in
          type: string
          required: true

paths:
  ################################################################
  # Documentation routes
  ################################################################

  /docs:
    get:
      description: Swagger UI of the API
      tags:
        - Documentation
      responses:
        200:
          description: HTML page to render Swagger UI.

  ################################################################
  # Auth routes
  ################################################################

  /auth/register:
    post:
      description: Create a new user account
      tags:
        - Auth
      requestBody:
        description: Registration data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationData'
      responses:
        201:
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessData'
        409:
          description: Username or email already in use by another user
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    description: The reason why the account creation is declined
                    type: string
                    enum:
                      - 'Username already used by another user'
                      - 'Email already used by another user'

  /auth/login:
    post:
      description: Login to an existing account
      tags:
        - Auth
      requestBody:
        description: Login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginFormData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginFormData'
      responses:
        200:
          description: Login successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessData'
        401:
          description: Wrong credentials combination
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
                    enum:
                      - 'Wrong credentials'
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    description: Username which no user can be found with
                    type: string
                  reason:
                    type: string
                    enum:
                      - 'User not found'
